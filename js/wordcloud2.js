window.xhr = new XMLHttpRequest();
window.buffer = new Array();
function send(value) {
  window.buffer.push(value);
  sendReally();
}
function sendReally() {
  window.xhr.open('POST', 'http://localhost:8080/CARTRTS/getExecutionTrace', false);
  window.xhr.send(JSON.stringify(window.buffer));
  window.buffer = new Array();
}
function addVariable(name, value) {
  if (typeof (value) == 'object') 
  {
    if (value instanceof Array) 
    {
      if (value.length > 0) 
      {
        return new Array(name, typeof (value[0]) + '_array', value);
      } else {
        return new Array(name, 'object_array', value);
      }
    }
  } else if (typeof (value) != 'undefined' && typeof (value) != 'function') 
  {
    return new Array(name, typeof (value), value);
  }
  return new Array(name, typeof (value), 'undefined');
}
'use strict';
if (!window.setImmediate) 
{
  window.setImmediate = (function setupSetImmediate() {
  return window.msSetImmediate || window.webkitSetImmediate || window.mozSetImmediate || window.oSetImmediate || (function setupSetZeroTimeout() {
  send(new Array('/wordcloud2js.setupSetZeroTimeout', ':::ENTER', new Array(addVariable('callbacks', callbacks), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  if (!window.postMessage || !window.addEventListener) 
  {
    send(new Array('/wordcloud2js.setupSetZeroTimeout', ':::EXIT19', new Array(addVariable('callbacks', callbacks), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
    return null;
  }
  var callbacks = [undefined];
  var message = 'zero-timeout-message';
  var setZeroTimeout = function setZeroTimeout(callback) {
  send(new Array('/wordcloud2js.setZeroTimeout', ':::ENTER', new Array(addVariable('callback', callback), addVariable('callbacks', callbacks), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  var id = callbacks.length;
  callbacks.push(callback);
  window.postMessage(message + id.toString(36), '*');
  send(new Array('/wordcloud2js.setZeroTimeout', ':::EXIT33', new Array(addVariable('callback', callback), addVariable('callbacks', callbacks), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  return id;
};
  window.addEventListener('message', function setZeroTimeoutMessage(evt) {
  send(new Array('/wordcloud2js.setZeroTimeoutMessage', ':::ENTER', new Array(addVariable('callbacks', callbacks), addVariable('evt', evt), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  if (typeof evt.data !== 'string' || evt.data.substr(0, message.length) !== message) 
  {
    send(new Array('/wordcloud2js.setZeroTimeoutMessage', ':::EXIT42', new Array(addVariable('callbacks', callbacks), addVariable('evt', evt), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
    return;
  }
  evt.stopImmediatePropagation();
  var id = parseInt(evt.data.substr(message.length), 36);
  if (!callbacks[id]) 
  {
    send(new Array('/wordcloud2js.setZeroTimeoutMessage', ':::EXIT49', new Array(addVariable('callbacks', callbacks), addVariable('evt', evt), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
    return;
  }
  callbacks[id]();
  callbacks[id] = undefined;
  send(new Array('/wordcloud2js.setZeroTimeoutMessage', ':::EXIT53', new Array(addVariable('callbacks', callbacks), addVariable('evt', evt), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
}, true);
  window.clearImmediate = function clearZeroTimeout(id) {
  send(new Array('/wordcloud2js.clearZeroTimeout', ':::ENTER', new Array(addVariable('callbacks', callbacks), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  if (!callbacks[id]) 
  {
    send(new Array('/wordcloud2js.clearZeroTimeout', ':::EXIT59', new Array(addVariable('callbacks', callbacks), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
    return;
  }
  callbacks[id] = undefined;
  send(new Array('/wordcloud2js.clearZeroTimeout', ':::EXIT62', new Array(addVariable('callbacks', callbacks), addVariable('id', id), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
};
  send(new Array('/wordcloud2js.setupSetZeroTimeout', ':::EXIT65', new Array(addVariable('callbacks', callbacks), addVariable('message', message), addVariable('setZeroTimeout', setZeroTimeout))));
  return setZeroTimeout;
})() || function setImmediateFallback(fn) {
  send(new Array('/wordcloud2js.setImmediateFallback', ':::ENTER', new Array(addVariable('fn', fn))));
  window.setTimeout(fn, 0);
  send(new Array('/wordcloud2js.setImmediateFallback', ':::EXIT69', new Array(addVariable('fn', fn))));
};
})();
}
if (!window.clearImmediate) 
{
  window.clearImmediate = (function setupClearImmediate() {
  return window.msClearImmediate || window.webkitClearImmediate || window.mozClearImmediate || window.oClearImmediate || function clearImmediateFallback(timer) {
  send(new Array('/wordcloud2js.clearImmediateFallback', ':::ENTER', new Array(addVariable('timer', timer))));
  window.clearTimeout(timer);
  send(new Array('/wordcloud2js.clearImmediateFallback', ':::EXIT83', new Array(addVariable('timer', timer))));
};
})();
}
(function(global) {
  send(new Array('/wordcloud2js.anonymous88', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
  var isSupported = (function isSupported() {
  send(new Array('/wordcloud2js.isSupported', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
  var canvas = document.createElement('canvas');
  if (!canvas || !canvas.getContext) 
  {
    send(new Array('/wordcloud2js.isSupported', ':::EXIT94', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
    return false;
  }
  var ctx = canvas.getContext('2d');
  if (!ctx.getImageData) 
  {
    send(new Array('/wordcloud2js.isSupported', ':::EXIT99', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
    return false;
  }
  if (!ctx.fillText) 
  {
    send(new Array('/wordcloud2js.isSupported', ':::EXIT102', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
    return false;
  }
  if (!Array.prototype.some) 
  {
    send(new Array('/wordcloud2js.isSupported', ':::EXIT106', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
    return false;
  }
  if (!Array.prototype.push) 
  {
    send(new Array('/wordcloud2js.isSupported', ':::EXIT109', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
    return false;
  }
  send(new Array('/wordcloud2js.isSupported', ':::EXIT112', new Array(addVariable('WordCloud', WordCloud), addVariable('canvas', canvas), addVariable('ctx', ctx), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
  return true;
}());
  var minFontSize = (function getMinFontSize() {
  send(new Array('/wordcloud2js.getMinFontSize', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('ctx', ctx), addVariable('global', global), addVariable('hanWidth', hanWidth), addVariable('isSupported', isSupported), addVariable('mWidth', mWidth), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('size', size))));
  if (!isSupported) 
  {
    send(new Array('/wordcloud2js.getMinFontSize', ':::EXIT119', new Array(addVariable('WordCloud', WordCloud), addVariable('ctx', ctx), addVariable('global', global), addVariable('hanWidth', hanWidth), addVariable('isSupported', isSupported), addVariable('mWidth', mWidth), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('size', size))));
    return;
  }
  var ctx = document.createElement('canvas').getContext('2d');
  var size = 20;
  var hanWidth, mWidth;
  while (size) 
    {
      ctx.font = size.toString(10) + 'px sans-serif';
      if ((ctx.measureText('\uff37').width === hanWidth) && (ctx.measureText('m').width) === mWidth) 
      {
        send(new Array('/wordcloud2js.getMinFontSize', ':::EXIT134', new Array(addVariable('WordCloud', WordCloud), addVariable('ctx', ctx), addVariable('global', global), addVariable('hanWidth', hanWidth), addVariable('isSupported', isSupported), addVariable('mWidth', mWidth), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('size', size))));
        return (size + 1);
      }
      hanWidth = ctx.measureText('\uff37').width;
      mWidth = ctx.measureText('m').width;
      size--;
    }
  send(new Array('/wordcloud2js.getMinFontSize', ':::EXIT143', new Array(addVariable('WordCloud', WordCloud), addVariable('ctx', ctx), addVariable('global', global), addVariable('hanWidth', hanWidth), addVariable('isSupported', isSupported), addVariable('mWidth', mWidth), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('size', size))));
  return 0;
})();
  var shuffleArray = function shuffleArray(arr) {
  send(new Array('/wordcloud2js.shuffleArray', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('arr', arr), addVariable('global', global), addVariable('i', i), addVariable('isSupported', isSupported), addVariable('j', j), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('x', x))));
  for (var j, x, i = arr.length; i; j = Math.floor(Math.random() * i) , x = arr[--i] , arr[i] = arr[j] , arr[j] = x) 
    {
    }
  send(new Array('/wordcloud2js.shuffleArray', ':::EXIT152', new Array(addVariable('WordCloud', WordCloud), addVariable('arr', arr), addVariable('global', global), addVariable('i', i), addVariable('isSupported', isSupported), addVariable('j', j), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray), addVariable('x', x))));
  return arr;
};
  var WordCloud = function WordCloud(elements, options) {
  send(new Array('/wordcloud2js.WordCloud', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (!isSupported) 
  {
    send(new Array('/wordcloud2js.WordCloud', ':::EXIT157', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return;
  }
  if (!Array.isArray(elements)) 
  {
    elements = [elements];
  }
  elements.forEach(function(el, i) {
  send(new Array('/wordcloud2js.anonymous164', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (typeof el === 'string') 
  {
    elements[i] = document.getElementById(el);
    if (!elements[i]) 
    {
      throw 'The element id specified is not found.';
    }
  } else if (!el.tagName && !el.appendChild) 
  {
    throw 'You must pass valid HTML elements, or ID of the element.';
  }
  send(new Array('/wordcloud2js.anonymous164', ':::EXIT165', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
});
  var settings = {list: [], fontFamily: '"Trebuchet MS", "Heiti TC", "\u5fae\u8edf\u6b63\u9ed1\u9ad4", ' + '"Arial Unicode MS", "Droid Fallback Sans", sans-serif', fontWeight: 'normal', color: 'random-dark', minSize: 0, weightFactor: 1, clearCanvas: true, backgroundColor: '#fff', gridSize: 8, drawOutOfBound: false, origin: null, drawMask: false, maskColor: 'rgba(255,0,0,0.3)', maskGapWidth: 0.3, wait: 0, abortThreshold: 0, abort: function noop() {
  send(new Array('/wordcloud2js.noop', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.noop', ':::EXIT0', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
}, minRotation: -Math.PI / 2, maxRotation: Math.PI / 2, shuffle: true, rotateRatio: 0.1, shape: 'circle', ellipticity: 0.65, classes: null, hover: null, click: null};
  if (options) 
  {
    for (var key in options) 
      {
        if (key in settings) 
        {
          settings[key] = options[key];
        }
      }
  }
  if (typeof settings.weightFactor !== 'function') 
  {
    var factor = settings.weightFactor;
    settings.weightFactor = function weightFactor(pt) {
  send(new Array('/wordcloud2js.weightFactor', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('pt', pt), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.weightFactor', ':::EXIT226', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('pt', pt), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return pt * factor;
};
  }
  if (typeof settings.shape !== 'function') 
  {
    switch (settings.shape) {
      case 'circle':
      default:
        settings.shape = 'circle';
        break;
      case 'cardioid':
        settings.shape = function shapeCardioid(theta) {
  send(new Array('/wordcloud2js.shapeCardioid', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.shapeCardioid', ':::EXIT242', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return 1 - Math.sin(theta);
};
        break;
      case 'diamond':
      case 'square':
        settings.shape = function shapeSquare(theta) {
  send(new Array('/wordcloud2js.shapeSquare', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var thetaPrime = theta % (2 * Math.PI / 4);
  send(new Array('/wordcloud2js.shapeSquare', ':::EXIT265', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));
};
        break;
      case 'triangle-forward':
        settings.shape = function shapeTriangle(theta) {
  send(new Array('/wordcloud2js.shapeTriangle', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var thetaPrime = theta % (2 * Math.PI / 3);
  send(new Array('/wordcloud2js.shapeTriangle', ':::EXIT275', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return 1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime));
};
        break;
      case 'triangle':
      case 'triangle-upright':
        settings.shape = function shapeTriangle(theta) {
  send(new Array('/wordcloud2js.shapeTriangle', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);
  send(new Array('/wordcloud2js.shapeTriangle', ':::EXIT284', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return 1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime));
};
        break;
      case 'pentagon':
        settings.shape = function shapePentagon(theta) {
  send(new Array('/wordcloud2js.shapePentagon', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);
  send(new Array('/wordcloud2js.shapePentagon', ':::EXIT292', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return 1 / (Math.cos(thetaPrime) + 0.726543 * Math.sin(thetaPrime));
};
        break;
      case 'star':
        settings.shape = function shapeStar(theta) {
  send(new Array('/wordcloud2js.shapeStar', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);
  if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) 
  {
    send(new Array('/wordcloud2js.shapeStar', ':::EXIT301', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) + 3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));
  } else {
    send(new Array('/wordcloud2js.shapeStar', ':::EXIT304', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return 1 / (Math.cos(thetaPrime) + 3.07768 * Math.sin(thetaPrime));
  }
  send(new Array('/wordcloud2js.shapeStar', ':::EXIT300', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('thetaPrime', thetaPrime), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
        break;
    }
  }
  settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);
  var g = settings.gridSize;
  var maskRectWidth = g - settings.maskGapWidth;
  var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);
  var minRotation = Math.min(settings.maxRotation, settings.minRotation);
  var grid, ngx, ngy, center, maxRadius;
  var escapeTime;
  var getTextColor;
  function random_hsl_color(min, max) {
    send(new Array('/wordcloud2js.random_hsl_color', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('max', max), addVariable('maxRadius', maxRadius), addVariable('min', min), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    send(new Array('/wordcloud2js.random_hsl_color', ':::EXIT335', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('max', max), addVariable('maxRadius', maxRadius), addVariable('min', min), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return 'hsl(' + (Math.random() * 360).toFixed() + ',' + (Math.random() * 30 + 70).toFixed() + '%,' + (Math.random() * (max - min) + min).toFixed() + '%)';
  }
  switch (settings.color) {
    case 'random-dark':
      getTextColor = function getRandomDarkColor() {
  send(new Array('/wordcloud2js.getRandomDarkColor', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.getRandomDarkColor', ':::EXIT343', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return random_hsl_color(10, 50);
};
      break;
    case 'random-light':
      getTextColor = function getRandomLightColor() {
  send(new Array('/wordcloud2js.getRandomLightColor', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.getRandomLightColor', ':::EXIT349', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return random_hsl_color(50, 90);
};
      break;
    default:
      if (typeof settings.color === 'function') 
      {
        getTextColor = settings.color;
      }
      break;
  }
  var getTextClasses = null;
  if (typeof settings.classes === 'function') 
  {
    getTextClasses = settings.classes;
  }
  var interactive = false;
  var infoGrid = [];
  var hovered;
  var getInfoGridFromMouseTouchEvent = function getInfoGridFromMouseTouchEvent(evt) {
  send(new Array('/wordcloud2js.getInfoGridFromMouseTouchEvent', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('clientX', clientX), addVariable('clientY', clientY), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('eventX', eventX), addVariable('eventY', eventY), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  var canvas = evt.currentTarget;
  var rect = canvas.getBoundingClientRect();
  var clientX;
  var clientY;
  if (evt.touches) 
  {
    clientX = evt.touches[0].clientX;
    clientY = evt.touches[0].clientY;
  } else {
    clientX = evt.clientX;
    clientY = evt.clientY;
  }
  var eventX = clientX - rect.left;
  var eventY = clientY - rect.top;
  var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);
  var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);
  send(new Array('/wordcloud2js.getInfoGridFromMouseTouchEvent', ':::EXIT391', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('clientX', clientX), addVariable('clientY', clientY), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('eventX', eventX), addVariable('eventY', eventY), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  return infoGrid[x][y];
};
  var wordcloudhover = function wordcloudhover(evt) {
  send(new Array('/wordcloud2js.wordcloudhover', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var info = getInfoGridFromMouseTouchEvent(evt);
  if (hovered === info) 
  {
    send(new Array('/wordcloud2js.wordcloudhover', ':::EXIT398', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return;
  }
  hovered = info;
  if (!info) 
  {
    settings.hover(undefined, undefined, evt);
    send(new Array('/wordcloud2js.wordcloudhover', ':::EXIT405', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return;
  }
  settings.hover(info.item, info.dimension, evt);
  send(new Array('/wordcloud2js.wordcloudhover', ':::EXIT408', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  var wordcloudclick = function wordcloudclick(evt) {
  send(new Array('/wordcloud2js.wordcloudclick', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var info = getInfoGridFromMouseTouchEvent(evt);
  if (!info) 
  {
    send(new Array('/wordcloud2js.wordcloudclick', ':::EXIT415', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return;
  }
  settings.click(info.item, info.dimension, evt);
  evt.preventDefault();
  send(new Array('/wordcloud2js.wordcloudclick', ':::EXIT419', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  var pointsAtRadius = [];
  var getPointsAtRadius = function getPointsAtRadius(radius) {
  send(new Array('/wordcloud2js.getPointsAtRadius', ':::ENTER', new Array(addVariable('T', T), addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('radius', radius), addVariable('rotationRange', rotationRange), addVariable('rx', rx), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('t', t), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (pointsAtRadius[radius]) 
  {
    send(new Array('/wordcloud2js.getPointsAtRadius', ':::EXIT426', new Array(addVariable('T', T), addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('radius', radius), addVariable('rotationRange', rotationRange), addVariable('rx', rx), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('t', t), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return pointsAtRadius[radius];
  }
  var T = radius * 8;
  var t = T;
  var points = [];
  if (radius === 0) 
  {
    points.push([center[0], center[1], 0]);
  }
  while (t--) 
    {
      var rx = 1;
      if (settings.shape !== 'circle') 
      {
        rx = settings.shape(t / T * 2 * Math.PI);
      }
      points.push([center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI), center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) * settings.ellipticity, t / T * 2 * Math.PI]);
    }
  pointsAtRadius[radius] = points;
  send(new Array('/wordcloud2js.getPointsAtRadius', ':::EXIT456', new Array(addVariable('T', T), addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('radius', radius), addVariable('rotationRange', rotationRange), addVariable('rx', rx), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('t', t), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return points;
};
  var exceedTime = function exceedTime() {
  send(new Array('/wordcloud2js.exceedTime', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  send(new Array('/wordcloud2js.exceedTime', ':::EXIT461', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return ((settings.abortThreshold > 0) && ((new Date()).getTime() - escapeTime > settings.abortThreshold));
};
  var getRotateDeg = function getRotateDeg() {
  send(new Array('/wordcloud2js.getRotateDeg', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (settings.rotateRatio === 0) 
  {
    send(new Array('/wordcloud2js.getRotateDeg', ':::EXIT468', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return 0;
  }
  if (Math.random() > settings.rotateRatio) 
  {
    send(new Array('/wordcloud2js.getRotateDeg', ':::EXIT472', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return 0;
  }
  if (rotationRange === 0) 
  {
    send(new Array('/wordcloud2js.getRotateDeg', ':::EXIT476', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return minRotation;
  }
  send(new Array('/wordcloud2js.getRotateDeg', ':::EXIT479', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return minRotation + Math.random() * rotationRange;
};
  var getTextInfo = function getTextInfo(word, weight, rotateDeg) {
  send(new Array('/wordcloud2js.getTextInfo', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  var debug = false;
  var fontSize = settings.weightFactor(weight);
  if (fontSize <= settings.minSize) 
  {
    send(new Array('/wordcloud2js.getTextInfo', ':::EXIT489', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return false;
  }
  var mu = 1;
  if (fontSize < minFontSize) 
  {
    mu = (function calculateScaleFactor() {
  send(new Array('/wordcloud2js.calculateScaleFactor', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  var mu = 2;
  while (mu * fontSize < minFontSize) 
    {
      mu += 2;
    }
  send(new Array('/wordcloud2js.calculateScaleFactor', ':::EXIT502', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  return mu;
})();
  }
  var fcanvas = document.createElement('canvas');
  var fctx = fcanvas.getContext('2d', {willReadFrequently: true});
  fctx.font = settings.fontWeight + ' ' + (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;
  var fw = fctx.measureText(word).width / mu;
  var fh = Math.max(fontSize * mu, fctx.measureText('m').width, fctx.measureText('\uff37').width) / mu;
  var boxWidth = fw + fh * 2;
  var boxHeight = fh * 3;
  var fgw = Math.ceil(boxWidth / g);
  var fgh = Math.ceil(boxHeight / g);
  boxWidth = fgw * g;
  boxHeight = fgh * g;
  var fillTextOffsetX = -fw / 2;
  var fillTextOffsetY = -fh * 0.4;
  var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) + boxHeight * Math.abs(Math.cos(rotateDeg))) / g);
  var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) + boxHeight * Math.abs(Math.sin(rotateDeg))) / g);
  var width = cgw * g;
  var height = cgh * g;
  fcanvas.setAttribute('width', width);
  fcanvas.setAttribute('height', height);
  if (debug) 
  {
    document.body.appendChild(fcanvas);
    fctx.save();
  }
  fctx.scale(1 / mu, 1 / mu);
  fctx.translate(width * mu / 2, height * mu / 2);
  fctx.rotate(-rotateDeg);
  fctx.font = settings.fontWeight + ' ' + (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;
  fctx.fillStyle = '#000';
  fctx.textBaseline = 'middle';
  fctx.fillText(word, fillTextOffsetX * mu, (fillTextOffsetY + fontSize * 0.5) * mu);
  var imageData = fctx.getImageData(0, 0, width, height).data;
  if (exceedTime()) 
  {
    send(new Array('/wordcloud2js.getTextInfo', ':::EXIT580', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return false;
  }
  if (debug) 
  {
    fctx.strokeRect(fillTextOffsetX * mu, fillTextOffsetY, fw * mu, fh * mu);
    fctx.restore();
  }
  var occupied = [];
  var gx = cgw, gy, x, y;
  var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];
  while (gx--) 
    {
      gy = cgh;
      while (gy--) 
        {
          y = g;
          singleGridLoop:
            {
              while (y--) 
                {
                  x = g;
                  while (x--) 
                    {
                      if (imageData[((gy * g + y) * width + (gx * g + x)) * 4 + 3]) 
                      {
                        occupied.push([gx, gy]);
                        if (gx < bounds[3]) 
                        {
                          bounds[3] = gx;
                        }
                        if (gx > bounds[1]) 
                        {
                          bounds[1] = gx;
                        }
                        if (gy < bounds[0]) 
                        {
                          bounds[0] = gy;
                        }
                        if (gy > bounds[2]) 
                        {
                          bounds[2] = gy;
                        }
                        if (debug) 
                        {
                          fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';
                          fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
                        }
                        break singleGridLoop;
                      }
                    }
                }
              if (debug) 
              {
                fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';
                fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
              }
            }
        }
    }
  if (debug) 
  {
    fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
    fctx.fillRect(bounds[3] * g, bounds[0] * g, (bounds[1] - bounds[3] + 1) * g, (bounds[2] - bounds[0] + 1) * g);
  }
  send(new Array('/wordcloud2js.getTextInfo', ':::EXIT644', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('boxHeight', boxHeight), addVariable('boxWidth', boxWidth), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('cgh', cgh), addVariable('cgw', cgw), addVariable('debug', debug), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fcanvas', fcanvas), addVariable('fctx', fctx), addVariable('fgh', fgh), addVariable('fgw', fgw), addVariable('fh', fh), addVariable('fillGridAt', fillGridAt), addVariable('fillTextOffsetX', fillTextOffsetX), addVariable('fillTextOffsetY', fillTextOffsetY), addVariable('fontSize', fontSize), addVariable('fw', fw), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('height', height), addVariable('hovered', hovered), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('width', width), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  return {mu: mu, occupied: occupied, bounds: bounds, gw: cgw, gh: cgh, fillTextOffsetX: fillTextOffsetX, fillTextOffsetY: fillTextOffsetY, fillTextWidth: fw, fillTextHeight: fh, fontSize: fontSize};
};
  var canFitText = function canFitText(gx, gy, gw, gh, occupied) {
  send(new Array('/wordcloud2js.canFitText', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var i = occupied.length;
  while (i--) 
    {
      var px = gx + occupied[i][0];
      var py = gy + occupied[i][1];
      if (px >= ngx || py >= ngy || px < 0 || py < 0) 
      {
        if (!settings.drawOutOfBound) 
        {
          send(new Array('/wordcloud2js.canFitText', ':::EXIT669', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
          return false;
        }
        continue;
      }
      if (!grid[px][py]) 
      {
        send(new Array('/wordcloud2js.canFitText', ':::EXIT675', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
        return false;
      }
    }
  send(new Array('/wordcloud2js.canFitText', ':::EXIT678', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return true;
};
  var drawText = function drawText(gx, gy, info, word, weight, distance, theta, rotateDeg, attributes) {
  send(new Array('/wordcloud2js.drawText', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('classes', classes), addVariable('color', color), addVariable('dimension', dimension), addVariable('distance', distance), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('fontSize', fontSize), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var fontSize = info.fontSize;
  var color;
  if (getTextColor) 
  {
    color = getTextColor(word, weight, fontSize, distance, theta);
  } else {
    color = settings.color;
  }
  var classes;
  if (getTextClasses) 
  {
    classes = getTextClasses(word, weight, fontSize, distance, theta);
  } else {
    classes = settings.classes;
  }
  var dimension;
  var bounds = info.bounds;
  dimension = {x: (gx + bounds[3]) * g, y: (gy + bounds[0]) * g, w: (bounds[1] - bounds[3] + 1) * g, h: (bounds[2] - bounds[0] + 1) * g};
  elements.forEach(function(el) {
  send(new Array('/wordcloud2js.anonymous709', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('attribute', attribute), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('classes', classes), addVariable('color', color), addVariable('cssProp', cssProp), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('distance', distance), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('fontSize', fontSize), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('span', span), addVariable('start', start), addVariable('styleRules', styleRules), addVariable('theta', theta), addVariable('transformRule', transformRule), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (el.getContext) 
  {
    var ctx = el.getContext('2d');
    var mu = info.mu;
    ctx.save();
    ctx.scale(1 / mu, 1 / mu);
    ctx.font = settings.fontWeight + ' ' + (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;
    ctx.fillStyle = color;
    ctx.translate((gx + info.gw / 2) * g * mu, (gy + info.gh / 2) * g * mu);
    if (rotateDeg !== 0) 
    {
      ctx.rotate(-rotateDeg);
    }
    ctx.textBaseline = 'middle';
    ctx.fillText(word, info.fillTextOffsetX * mu, (info.fillTextOffsetY + fontSize * 0.5) * mu);
    ctx.restore();
  } else {
    var span = document.createElement('span');
    var transformRule = '';
    transformRule = 'rotate(' + (-rotateDeg / Math.PI * 180) + 'deg) ';
    if (info.mu !== 1) 
    {
      transformRule += 'translateX(-' + (info.fillTextWidth / 4) + 'px) ' + 'scale(' + (1 / info.mu) + ')';
    }
    var styleRules = {'position': 'absolute', 'display': 'block', 'font': settings.fontWeight + ' ' + (fontSize * info.mu) + 'px ' + settings.fontFamily, 'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px', 'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px', 'width': info.fillTextWidth + 'px', 'height': info.fillTextHeight + 'px', 'lineHeight': fontSize + 'px', 'whiteSpace': 'nowrap', 'transform': transformRule, 'webkitTransform': transformRule, 'msTransform': transformRule, 'transformOrigin': '50% 40%', 'webkitTransformOrigin': '50% 40%', 'msTransformOrigin': '50% 40%'};
    if (color) 
    {
      styleRules.color = color;
    }
    span.textContent = word;
    for (var cssProp in styleRules) 
      {
        span.style[cssProp] = styleRules[cssProp];
      }
    if (attributes) 
    {
      for (var attribute in attributes) 
        {
          span.setAttribute(attribute, attributes[attribute]);
        }
    }
    if (classes) 
    {
      span.className += classes;
    }
    el.appendChild(span);
  }
  send(new Array('/wordcloud2js.anonymous709', ':::EXIT710', new Array(addVariable('WordCloud', WordCloud), addVariable('attribute', attribute), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('classes', classes), addVariable('color', color), addVariable('cssProp', cssProp), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('distance', distance), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('fontSize', fontSize), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('mu', mu), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('span', span), addVariable('start', start), addVariable('styleRules', styleRules), addVariable('theta', theta), addVariable('transformRule', transformRule), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
});
  send(new Array('/wordcloud2js.drawText', ':::EXIT709', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('classes', classes), addVariable('color', color), addVariable('dimension', dimension), addVariable('distance', distance), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('fontSize', fontSize), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('theta', theta), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {
  send(new Array('/wordcloud2js.fillGridAt', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('drawMask', drawMask), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  if (x >= ngx || y >= ngy || x < 0 || y < 0) 
  {
    send(new Array('/wordcloud2js.fillGridAt', ':::EXIT799', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('drawMask', drawMask), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return;
  }
  grid[x][y] = false;
  if (drawMask) 
  {
    var ctx = elements[0].getContext('2d');
    ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);
  }
  if (interactive) 
  {
    infoGrid[x][y] = {item: item, dimension: dimension};
  }
  send(new Array('/wordcloud2js.fillGridAt', ':::EXIT809', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('drawMask', drawMask), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
};
  var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {
  send(new Array('/wordcloud2js.updateGrid', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('drawMask', drawMask), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var occupied = info.occupied;
  var drawMask = settings.drawMask;
  var ctx;
  if (drawMask) 
  {
    ctx = elements[0].getContext('2d');
    ctx.save();
    ctx.fillStyle = settings.maskColor;
  }
  var dimension;
  if (interactive) 
  {
    var bounds = info.bounds;
    dimension = {x: (gx + bounds[3]) * g, y: (gy + bounds[0]) * g, w: (bounds[1] - bounds[3] + 1) * g, h: (bounds[2] - bounds[0] + 1) * g};
  }
  var i = occupied.length;
  while (i--) 
    {
      var px = gx + occupied[i][0];
      var py = gy + occupied[i][1];
      if (px >= ngx || py >= ngy || px < 0 || py < 0) 
      {
        continue;
      }
      fillGridAt(px, py, drawMask, dimension, item);
    }
  if (drawMask) 
  {
    ctx.restore();
  }
  send(new Array('/wordcloud2js.updateGrid', ':::EXIT849', new Array(addVariable('WordCloud', WordCloud), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('ctx', ctx), addVariable('dimension', dimension), addVariable('drawMask', drawMask), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('occupied', occupied), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('px', px), addVariable('py', py), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  var putWord = function putWord(item) {
  send(new Array('/wordcloud2js.putWord', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var word, weight, attributes;
  if (Array.isArray(item)) 
  {
    word = item[0];
    weight = item[1];
  } else {
    word = item.word;
    weight = item.weight;
    attributes = item.attributes;
  }
  var rotateDeg = getRotateDeg();
  var info = getTextInfo(word, weight, rotateDeg);
  if (!info) 
  {
    send(new Array('/wordcloud2js.putWord', ':::EXIT874', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return false;
  }
  if (exceedTime()) 
  {
    send(new Array('/wordcloud2js.putWord', ':::EXIT878', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return false;
  }
  if (!settings.drawOutOfBound) 
  {
    var bounds = info.bounds;
    if ((bounds[1] - bounds[3] + 1) > ngx || (bounds[2] - bounds[0] + 1) > ngy) 
    {
      send(new Array('/wordcloud2js.putWord', ':::EXIT888', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
      return false;
    }
  }
  var r = maxRadius + 1;
  var tryToPutWordAtPoint = function(gxy) {
  send(new Array('/wordcloud2js.anonymous896', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gxy', gxy), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var gx = Math.floor(gxy[0] - info.gw / 2);
  var gy = Math.floor(gxy[1] - info.gh / 2);
  var gw = info.gw;
  var gh = info.gh;
  if (!canFitText(gx, gy, gw, gh, info.occupied)) 
  {
    send(new Array('/wordcloud2js.anonymous896', ':::EXIT905', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gxy', gxy), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return false;
  }
  drawText(gx, gy, info, word, weight, (maxRadius - r), gxy[2], rotateDeg, attributes);
  updateGrid(gx, gy, gw, gh, info, item);
  send(new Array('/wordcloud2js.anonymous896', ':::EXIT916', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('gh', gh), addVariable('global', global), addVariable('grid', grid), addVariable('gw', gw), addVariable('gx', gx), addVariable('gxy', gxy), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return true;
};
  while (r--) 
    {
      var points = getPointsAtRadius(maxRadius - r);
      if (settings.shuffle) 
      {
        points = [].concat(points);
        shuffleArray(points);
      }
      var drawn = points.some(tryToPutWordAtPoint);
      if (drawn) 
      {
        send(new Array('/wordcloud2js.putWord', ':::EXIT935', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
        return true;
      }
    }
  send(new Array('/wordcloud2js.putWord', ':::EXIT939', new Array(addVariable('WordCloud', WordCloud), addVariable('attributes', attributes), addVariable('bounds', bounds), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('info', info), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('item', item), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('points', points), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('r', r), addVariable('rotateDeg', rotateDeg), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('tryToPutWordAtPoint', tryToPutWordAtPoint), addVariable('updateGrid', updateGrid), addVariable('weight', weight), addVariable('word', word), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return false;
};
  var sendEvent = function sendEvent(type, cancelable, detail) {
  send(new Array('/wordcloud2js.sendEvent', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  if (cancelable) 
  {
    send(new Array('/wordcloud2js.sendEvent', ':::EXIT946', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
    return !elements.some(function(el) {
  send(new Array('/wordcloud2js.anonymous946', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var evt = document.createEvent('CustomEvent');
  evt.initCustomEvent(type, true, cancelable, detail || {});
  send(new Array('/wordcloud2js.anonymous946', ':::EXIT949', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  return !el.dispatchEvent(evt);
}, this);
  } else {
    elements.forEach(function(el) {
  send(new Array('/wordcloud2js.anonymous952', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
  var evt = document.createEvent('CustomEvent');
  evt.initCustomEvent(type, true, cancelable, detail || {});
  el.dispatchEvent(evt);
  send(new Array('/wordcloud2js.anonymous952', ':::EXIT955', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('evt', evt), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
}, this);
  }
  send(new Array('/wordcloud2js.sendEvent', ':::EXIT945', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('cancelable', cancelable), addVariable('center', center), addVariable('detail', detail), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  var start = function start() {
  send(new Array('/wordcloud2js.start', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  var canvas = elements[0];
  if (canvas.getContext) 
  {
    ngx = Math.ceil(canvas.width / g);
    ngy = Math.ceil(canvas.height / g);
  } else {
    var rect = canvas.getBoundingClientRect();
    ngx = Math.ceil(rect.width / g);
    ngy = Math.ceil(rect.height / g);
  }
  if (!sendEvent('wordcloudstart', true)) 
  {
    send(new Array('/wordcloud2js.start', ':::EXIT978', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return;
  }
  center = (settings.origin) ? [settings.origin[0] / g, settings.origin[1] / g] : [ngx / 2, ngy / 2];
  maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));
  grid = [];
  var gx, gy, i;
  if (!canvas.getContext || settings.clearCanvas) 
  {
    elements.forEach(function(el) {
  send(new Array('/wordcloud2js.anonymous995', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('ctx', ctx), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  if (el.getContext) 
  {
    var ctx = el.getContext('2d');
    ctx.fillStyle = settings.backgroundColor;
    ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));
    ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));
  } else {
    el.textContent = '';
    el.style.backgroundColor = settings.backgroundColor;
    el.style.position = 'relative';
  }
  send(new Array('/wordcloud2js.anonymous995', ':::EXIT996', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('ctx', ctx), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
});
    gx = ngx;
    while (gx--) 
      {
        grid[gx] = [];
        gy = ngy;
        while (gy--) 
          {
            grid[gx][gy] = true;
          }
      }
  } else {
    var bctx = document.createElement('canvas').getContext('2d');
    bctx.fillStyle = settings.backgroundColor;
    bctx.fillRect(0, 0, 1, 1);
    var bgPixel = bctx.getImageData(0, 0, 1, 1).data;
    var imageData = canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;
    gx = ngx;
    var x, y;
    while (gx--) 
      {
        grid[gx] = [];
        gy = ngy;
        while (gy--) 
          {
            y = g;
            singleGridLoop:
              while (y--) 
                {
                  x = g;
                  while (x--) 
                    {
                      i = 4;
                      while (i--) 
                        {
                          if (imageData[((gy * g + y) * ngx * g + (gx * g + x)) * 4 + i] !== bgPixel[i]) 
                          {
                            grid[gx][gy] = false;
                            break singleGridLoop;
                          }
                        }
                    }
                }
            if (grid[gx][gy] !== false) 
            {
              grid[gx][gy] = true;
            }
          }
      }
    imageData = bctx = bgPixel = undefined;
  }
  if (settings.hover || settings.click) 
  {
    interactive = true;
    gx = ngx + 1;
    while (gx--) 
      {
        infoGrid[gx] = [];
      }
    if (settings.hover) 
    {
      canvas.addEventListener('mousemove', wordcloudhover);
    }
    if (settings.click) 
    {
      canvas.addEventListener('click', wordcloudclick);
      canvas.addEventListener('touchstart', wordcloudclick);
      canvas.addEventListener('touchend', function(e) {
  send(new Array('/wordcloud2js.anonymous1079', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('e', e), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  e.preventDefault();
  send(new Array('/wordcloud2js.anonymous1079', ':::EXIT1080', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('e', e), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
});
      canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';
    }
    canvas.addEventListener('wordcloudstart', function stopInteraction() {
  send(new Array('/wordcloud2js.stopInteraction', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  canvas.removeEventListener('wordcloudstart', stopInteraction);
  canvas.removeEventListener('mousemove', wordcloudhover);
  canvas.removeEventListener('click', wordcloudclick);
  hovered = undefined;
  send(new Array('/wordcloud2js.stopInteraction', ':::EXIT1090', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
});
  }
  i = 0;
  var loopingFunction, stoppingFunction;
  if (settings.wait !== 0) 
  {
    loopingFunction = window.setTimeout;
    stoppingFunction = window.clearTimeout;
  } else {
    loopingFunction = window.setImmediate;
    stoppingFunction = window.clearImmediate;
  }
  var addEventListener = function addEventListener(type, listener) {
  send(new Array('/wordcloud2js.addEventListener', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  elements.forEach(function(el) {
  send(new Array('/wordcloud2js.anonymous1105', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  el.addEventListener(type, listener);
  send(new Array('/wordcloud2js.anonymous1105', ':::EXIT1106', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
}, this);
  send(new Array('/wordcloud2js.addEventListener', ':::EXIT1105', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
};
  var removeEventListener = function removeEventListener(type, listener) {
  send(new Array('/wordcloud2js.removeEventListener', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  elements.forEach(function(el) {
  send(new Array('/wordcloud2js.anonymous1111', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  el.removeEventListener(type, listener);
  send(new Array('/wordcloud2js.anonymous1111', ':::EXIT1112', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('el', el), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
}, this);
  send(new Array('/wordcloud2js.removeEventListener', ':::EXIT1111', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('listener', listener), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('type', type), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
};
  var anotherWordCloudStart = function anotherWordCloudStart() {
  send(new Array('/wordcloud2js.anotherWordCloudStart', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  removeEventListener('wordcloudstart', anotherWordCloudStart);
  stoppingFunction(timer);
  send(new Array('/wordcloud2js.anotherWordCloudStart', ':::EXIT1118', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
};
  addEventListener('wordcloudstart', anotherWordCloudStart);
  var timer = loopingFunction(function loop() {
  send(new Array('/wordcloud2js.loop', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canceled', canceled), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
  if (i >= settings.list.length) 
  {
    stoppingFunction(timer);
    sendEvent('wordcloudstop', false);
    removeEventListener('wordcloudstart', anotherWordCloudStart);
    send(new Array('/wordcloud2js.loop', ':::EXIT1129', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canceled', canceled), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return;
  }
  escapeTime = (new Date()).getTime();
  var drawn = putWord(settings.list[i]);
  var canceled = !sendEvent('wordclouddrawn', true, {item: settings.list[i], drawn: drawn});
  if (exceedTime() || canceled) 
  {
    stoppingFunction(timer);
    settings.abort();
    sendEvent('wordcloudabort', false);
    sendEvent('wordcloudstop', false);
    removeEventListener('wordcloudstart', anotherWordCloudStart);
    send(new Array('/wordcloud2js.loop', ':::EXIT1141', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canceled', canceled), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
    return;
  }
  i++;
  timer = loopingFunction(loop, settings.wait);
  send(new Array('/wordcloud2js.loop', ':::EXIT1144', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canceled', canceled), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('drawn', drawn), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
}, settings.wait);
  send(new Array('/wordcloud2js.start', ':::EXIT1123', new Array(addVariable('WordCloud', WordCloud), addVariable('addEventListener', addEventListener), addVariable('anotherWordCloudStart', anotherWordCloudStart), addVariable('bctx', bctx), addVariable('bgPixel', bgPixel), addVariable('canFitText', canFitText), addVariable('canvas', canvas), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('gx', gx), addVariable('gy', gy), addVariable('hovered', hovered), addVariable('i', i), addVariable('imageData', imageData), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('loopingFunction', loopingFunction), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rect', rect), addVariable('removeEventListener', removeEventListener), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('stoppingFunction', stoppingFunction), addVariable('timer', timer), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover), addVariable('x', x), addVariable('y', y))));
};
  start();
  send(new Array('/wordcloud2js.WordCloud', ':::EXIT1149', new Array(addVariable('WordCloud', WordCloud), addVariable('canFitText', canFitText), addVariable('center', center), addVariable('drawText', drawText), addVariable('elements', elements), addVariable('escapeTime', escapeTime), addVariable('exceedTime', exceedTime), addVariable('factor', factor), addVariable('fillGridAt', fillGridAt), addVariable('g', g), addVariable('getInfoGridFromMouseTouchEvent', getInfoGridFromMouseTouchEvent), addVariable('getPointsAtRadius', getPointsAtRadius), addVariable('getRotateDeg', getRotateDeg), addVariable('getTextClasses', getTextClasses), addVariable('getTextColor', getTextColor), addVariable('getTextInfo', getTextInfo), addVariable('global', global), addVariable('grid', grid), addVariable('hovered', hovered), addVariable('infoGrid', infoGrid), addVariable('interactive', interactive), addVariable('isSupported', isSupported), addVariable('key', key), addVariable('maskRectWidth', maskRectWidth), addVariable('maxRadius', maxRadius), addVariable('minFontSize', minFontSize), addVariable('minRotation', minRotation), addVariable('ngx', ngx), addVariable('ngy', ngy), addVariable('options', options), addVariable('pointsAtRadius', pointsAtRadius), addVariable('putWord', putWord), addVariable('rotationRange', rotationRange), addVariable('sendEvent', sendEvent), addVariable('settings', settings), addVariable('shuffleArray', shuffleArray), addVariable('start', start), addVariable('updateGrid', updateGrid), addVariable('wordcloudclick', wordcloudclick), addVariable('wordcloudhover', wordcloudhover))));
};
  WordCloud.isSupported = isSupported;
  WordCloud.minFontSize = minFontSize;
  if (typeof define === 'function' && define.amd) 
  {
    global.WordCloud = WordCloud;
    define('wordcloud', [], function() {
  send(new Array('/wordcloud2js.anonymous1158', ':::ENTER', new Array(addVariable('WordCloud', WordCloud), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
  send(new Array('/wordcloud2js.anonymous1158', ':::EXIT1158', new Array(addVariable('WordCloud', WordCloud), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
  return WordCloud;
});
  } else if (typeof module !== 'undefined' && module.exports) 
  {
    module.exports = WordCloud;
  } else {
    global.WordCloud = WordCloud;
  }
  send(new Array('/wordcloud2js.anonymous88', ':::EXIT1156', new Array(addVariable('WordCloud', WordCloud), addVariable('global', global), addVariable('isSupported', isSupported), addVariable('minFontSize', minFontSize), addVariable('shuffleArray', shuffleArray))));
})(this);
